{
  "info": {
    "_postman_id": "a2sv-g6-blog",
    "name": "G6 Blog API",
    "description": "Postman collection for the G6 Blog Starter Project API. Includes all endpoints as of August 2025.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"johndoe\",\n  \"email\": \"johndoe@example.com\",\n  \"password\": \"Password123!\",\n  \"firstname\": \"John\",\n  \"lastname\": \"Doe\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "register"]
            },
            "description": "Registers a new user. Provides username, email, password, first name, and last name."
          },
          "response": []
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"johndoe@example.com\",\n  \"password\": \"Password123!\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "Logs in a user with email and password to receive access and refresh tokens."
          },
          "response": []
        },
        {
          "name": "Verify Email",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{email_verification_token}}\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/verify-email",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "verify-email"]
            },
            "description": "Verifies a user's email address using a token sent to their email."
          },
          "response": []
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"johndoe@example.com\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/forgot-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "forgot-password"]
            },
            "description": "Initiates the password reset process for a user by sending a reset link to their email."
          },
          "response": []
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{reset_token}}\",\n  \"password\": \"NewPass123!\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "reset-password"]
            },
            "description": "Resets a user's password using a valid reset token."
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/refresh-token",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "refresh-token"]
            },
            "description": "Generates a new access token using a valid refresh token."
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "logout"]
            },
            "description": "Logs out the user by invalidating the refresh token."
          },
          "response": []
        },
        {
          "name": "Google Login",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/google/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "google", "login"]
            },
            "description": "Initiates Google OAuth2 login flow. This will redirect to Google's authentication page."
          },
          "response": []
        }
      ],
      "description": "Endpoints related to user authentication and authorization."
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", ":id"],
              "variable": [
                { "key": "id", "value": "123e4567-e89b-12d3-a456-426614174000" }
              ]
            },
            "description": "Retrieves a specific user's profile by their ID. Requires authentication."
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "me"]
            },
            "description": "Retrieves the profile of the currently authenticated user. Requires authentication."
          },
          "response": []
        },
        {
          "name": "Update Current User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"johndoe-updated\",\n  \"firstname\": \"JohnUpdated\",\n  \"lastname\": \"DoeUpdated\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "me"]
            },
            "description": "Updates the profile of the currently authenticated user. Requires authentication."
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing user profiles."
    },
    {
      "name": "Blog Management",
      "item": [
        {
          "name": "Get Blogs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs"]
            },
            "description": "Retrieves a paginated list of blogs. Supports sorting and filtering."
          },
          "response": []
        },
        {
          "name": "Search and Filter Blogs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/search?q=example&tags=tag1&tags=tag2&page=1&pageSize=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", "search"],
              "query": [
                { "key": "q", "value": "example" },
                { "key": "tags", "value": "tag1" },
                { "key": "tags", "value": "tag2" },
                { "key": "page", "value": "1" },
                { "key": "pageSize", "value": "10" }
              ]
            },
            "description": "Searches and filters blogs by query, tags, date, views, likes, author, and pagination.\n\n**To filter by multiple tags, use repeated query parameters:**\n\n`?tags=tag1&tags=tag2` (not `tags=tag1,tag2`).\n\nExample: `GET /api/v1/blogs/search?q=example&tags=tag1&tags=tag2&page=1&pageSize=10` will return blogs that have both tag1 and tag2."
          },
          "response": []
        },
        {
          "name": "Get Popular Blogs",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/popular?page=1&pageSize=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", "popular"],
              "query": [
                { "key": "page", "value": "1" },
                { "key": "pageSize", "value": "10" }
              ]
            },
            "description": "Retrieves popular blogs sorted by view count."
          },
          "response": []
        },
        {
          "name": "Get Blog Detail",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/:slugID",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", ":slugID"],
              "variable": [{ "key": "slugID", "value": "{{slug_id}}" }]
            },
            "description": "Retrieves details of a blog by its slug."
          },
          "response": []
        },
        {
          "name": "Create Blog",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}", "type": "text" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"My Blog\",\n  \"content\": \"Blog content...\",\n  \"slug\": \"my-blog\",\n  \"status\": \"published\",\n  \"tags\": [\"tag1\", \"tag2\"],\n  \"featured_image_id\": \"<optional_image_id>\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs"]
            },
            "description": "Creates a new blog post. Requires authentication.\n\nRequest Body Example:\n```json\n{\n  \"title\": \"My Blog\",\n  \"content\": \"Blog content...\",\n  \"slug\": \"my-blog\",\n  \"status\": \"published\",\n  \"tags\": [\"tag1\", \"tag2\"],\n  \"featured_image_id\": \"<optional_image_id>\"\n}\n```\n- `title` (string, required): Blog title.\n- `content` (string, required): Blog content.\n- `slug` (string, required): Blog slug.\n- `status` (string, required): Blog status (`draft`, `published`, `archived`).\n- `tags` (array of string, optional): List of tag IDs to associate with the blog.\n- `featured_image_id` (string, optional): ID of the featured image.\n\nResponse: 201 Created, message: Blog created successfully."
          },
          "response": []
        },
        {
          "name": "Update Blog",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Blog\",\n  \"content\": \"Updated content...\",\n  \"status\": \"published\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/:blogID",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", ":blogID"],
              "variable": [
                {
                  "key": "blogID",
                  "value": "123e4567-e89b-12d3-a456-426614174000"
                }
              ]
            },
            "description": "Updates a blog post by ID. Requires authentication.\n\nRequest Body Example:\n```json\n{\n  \"title\": \"Updated Blog\",\n  \"content\": \"Updated content...\",\n  \"status\": \"published\"\n}\n```\n- `title` (string, optional): New blog title.\n- `content` (string, optional): New blog content.\n- `status` (string, required): Blog status (`draft`, `published`, `archived`).\n\nResponse: 200 OK, returns updated blog object."
          },
          "response": []
        },
        {
          "name": "Delete Blog",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/:blogID",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", ":blogID"],
              "variable": [
                {
                  "key": "blogID",
                  "value": "123e4567-e89b-12d3-a456-426614174000"
                }
              ]
            },
            "description": "Deletes a blog post by ID. Requires authentication."
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing blogs."
    },
    {
      "name": "Blog Interactions",
      "item": [
        {
          "name": "Like Blog",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/:blogID/like",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", ":blogID", "like"],
              "variable": [{ "key": "blogID", "value": "{{blog_id}}" }]
            },
            "description": "Likes a blog post. Requires authentication."
          },
          "response": []
        },
        {
          "name": "Dislike Blog",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/:blogID/dislike",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", ":blogID", "dislike"],
              "variable": [{ "key": "blogID", "value": "{{blog_id}}" }]
            },
            "description": "Dislikes a blog post. Requires authentication."
          },
          "response": []
        },
        {
          "name": "Track Blog View",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/blogs/:blogID/view",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "blogs", ":blogID", "view"],
              "variable": [{ "key": "blogID", "value": "{{blog_id}}" }]
            },
            "description": "Tracks a view for a blog post. Requires authentication."
          },
          "response": []
        },
        {
              "name": "Create Comment",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{accessToken}}", "type": "text" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"This is a comment!\",\n  \"type\": \"comment\"\n}",
                  "options": { "raw": { "language": "json" } }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/blogs/:blogId/comment",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "blogs", ":blogId", "comment"],
                  "variable": [{ "key": "blogId", "value": "{{blog_id}}" }]
                },
                "description": "Adds a comment or reply to a blog post.\n\nTop-level comment request body:\n```json\n{\n  \"content\": \"This is a comment!\",\n  \"type\": \"comment\"\n}\n```\n\nReply request body:\n```json\n{\n  \"content\": \"This is a reply!\",\n  \"type\": \"reply\",\n  \"parent_id\": \"<parent_comment_id>\",\n  \"target_id\": \"<target_comment_or_reply_id>\",\n  \"target_user_name\": \"<username_being_replied_to>\"\n}\n```\n\nRequires authentication."
              },
              "response": []
            },
            {
              "name": "Get Comment",
              "request": {
                "method": "GET",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{accessToken}}", "type": "text" }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/comments/:commentId",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "comments", ":commentId"],
                  "variable": [{ "key": "commentId", "value": "{{comment_id}}" }]
                },
                "description": "Retrieves a single comment by its ID. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Create Reply to Comment",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{accessToken}}", "type": "text" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"This is a reply!\",\n  \"type\": \"reply\",\n  \"target_id\": \"TARGET_COMMENT_OR_REPLY_ID\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/comments/:commentID/reply",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "comments", ":commentID", "reply"],
                  "variable": [{ "key": "commentID", "value": "{{comment_id}}" }]
                },
                "description": "Creates a reply to a comment. Requires parent comment ID in the URL and target_id in the body."
              },
              "response": []
            },
            {
              "name": "Get All Replies of a Comment",
              "request": {
                "method": "GET",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{accessToken}}", "type": "text" }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/comments/:commentID/replies",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "comments", ":commentID", "replies"],
                  "variable": [{ "key": "commentID", "value": "{{comment_id}}" }]
                },
                "description": "Fetches all replies (including nested) for a given comment ID. Returns a list of replies."
              },
              "response": []
            },
            {
              "name": "Get Comment Statistics",
              "request": {
                "method": "GET",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{accessToken}}", "type": "text" }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/comments/:commentID/count",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "comments", ":commentID", "count"],
                  "variable": [{ "key": "commentID", "value": "{{comment_id}}" }]
                },
                "description": "Fetches a comment by ID and returns the total count of its replies. Useful for analytics and UI display."
              },
              "response": []
            },
            {
              "name": "Update Comment",
              "request": {
                "method": "PUT",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{accessToken}}", "type": "text" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Updated comment text\"\n}",
                  "options": { "raw": { "language": "json" } }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/comments/:commentId",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "comments", ":commentId"],
                  "variable": [{ "key": "commentId", "value": "{{comment_id}}" }]
                },
                "description": "Updates a comment by its ID. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Delete Comment",
              "request": {
                "method": "DELETE",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{accessToken}}", "type": "text" }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/comments/:commentId",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "comments", ":commentId"],
                  "variable": [{ "key": "commentId", "value": "{{comment_id}}" }]
                },
                "description": "Deletes a comment by its ID. Requires authentication."
              },
              "response": []
            },
            {
              "name": "List Blog Comments",
              "request": {
                "method": "GET",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{accessToken}}", "type": "text" }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/blogs/:blogId/comments?page=1&page_size=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "blogs", ":blogId", "comments"],
                  "query": [
                    { "key": "page", "value": "1" },
                    { "key": "page_size", "value": "20" }
                  ],
                  "variable": [{ "key": "blogId", "value": "{{blog_id}}" }]
                },
                "description": "Lists comments for a blog post. Requires authentication."
              },
              "response": []
            },
            {
              "name": "Get Comment Thread",
              "request": {
                "method": "GET",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{accessToken}}", "type": "text" }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/comments/:commentId",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "comments", ":commentId"],
                  "variable": [{ "key": "commentId", "value": "{{comment_id}}" }]
                },
                "description": "Retrieves the thread for a comment, including all nested replies. Requires authentication."
              },
              "response": []
            },
            {
              "name": "List User Comments",
              "request": {
                "method": "GET",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{accessToken}}", "type": "text" }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/users/:userId/comments?page=1&page_size=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "users", ":userId", "comments"],
                  "query": [
                    { "key": "page", "value": "1" },
                    { "key": "page_size", "value": "20" }
                  ],
                  "variable": [{ "key": "userId", "value": "{{user_id}}" }]
                },
                "description": "Lists comments made by a user. Requires authentication."
              },
              "response": []
            }
      ],
  "description": "Endpoints for blog interactions (like, dislike, view, and comment)."
    },
    {
      "name": "Monitoring",
      "item": [
        {
          "name": "Prometheus Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/metrics",
              "host": ["{{baseUrl}}"],
              "path": ["metrics"]
            },
            "description": "Exposes Prometheus metrics in text format for scraping. Useful for quick inspection in Postman."
          },
          "response": []
        }
      ],
      "description": "Operational monitoring endpoints (Prometheus metrics)."
    }
  ],
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:8080" },
    { "key": "accessToken", "value": "" },
    { "key": "blog_id", "value": "" },
    { "key": "slug_id", "value": "" },
    { "key": "reset_token", "value": "" },
    { "key": "refresh_token", "value": "" },
    { "key": "email_verification_token", "value": "" }
  ]
}
